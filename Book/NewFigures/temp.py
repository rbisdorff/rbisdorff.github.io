# Saved performance Tableau: 
from decimal import Decimal
from collections import OrderedDict
actions = OrderedDict([
('a1', {
'shortName': 'a1c',
'name': 'action a1',
'comment': 'Cost-Benefit',
'type': 'cheap',
}),
('a2', {
'shortName': 'a2n',
'name': 'action a2',
'comment': 'Cost-Benefit',
'type': 'neutral',
}),
('a3', {
'shortName': 'a3n',
'name': 'action a3',
'comment': 'Cost-Benefit',
'type': 'neutral',
}),
('a4', {
'shortName': 'a4c',
'name': 'action a4',
'comment': 'Cost-Benefit',
'type': 'cheap',
}),
('a5', {
'shortName': 'a5a',
'name': 'action a5',
'comment': 'Cost-Benefit',
'type': 'advantageous',
}),
('a6', {
'shortName': 'a6n',
'name': 'action a6',
'comment': 'Cost-Benefit',
'type': 'neutral',
}),
('a7', {
'shortName': 'a7a',
'name': 'action a7',
'comment': 'Cost-Benefit',
'type': 'advantageous',
}),
])
objectives = OrderedDict([
('C', {
'name': 'Costs',
'criteria': ['c1', 'c2', 'c3'],
'weight': Decimal('6'),
}),
('B', {
'name': 'Benefits',
'criteria': ['b1', 'b2'],
'weight': Decimal('6'),
}),
])
criteria = OrderedDict([
('c1', {
'preferenceDirection': 'min',
'scaleType': 'cardinal',
'objective': 'C',
'shortName': 'c1',
'name': 'random cardinal cost criterion',
'scale': (0.0, 100.0),
'weight': Decimal('2'),
'randomMode': ['triangular', 50.0, 0.5],
'comment': 'Evaluation generator: triangular law with variable mode (m) and probability repartition (p = 0.5). Cheap actions: m = 30%; neutral actions: m = 50%; advantageous actions: m = 70%.',
'thresholds': OrderedDict([('ind', (Decimal('2.3265623888010514'), Decimal('0'))), ('pref', (Decimal('4.46'), Decimal('0'))), ('veto', (Decimal('64.22948970791712'), Decimal('0')))]),
}),
('b1', {
'preferenceDirection': 'max',
'scaleType': 'ordinal',
'objective': 'B',
'shortName': 'b1',
'name': 'random ordinal benefit criterion',
'scale': (0, 10),
'weight': Decimal('3'),
'randomMode': ['triangular', 5.0, 0.5],
'comment': 'Evaluation generator: triangular law with variable mode (m) and probability repartition (p = 0.5). Cheap actions: m = 30%; neutral actions: m = 50%; advantageous actions: m = 70%.',
'thresholds': OrderedDict(),
}),
('c2', {
'preferenceDirection': 'min',
'scaleType': 'cardinal',
'objective': 'C',
'shortName': 'c2',
'name': 'random cardinal cost criterion',
'scale': (0.0, 100.0),
'weight': Decimal('2'),
'randomMode': ['triangular', 50.0, 0.5],
'comment': 'Evaluation generator: triangular law with variable mode (m) and probability repartition (p = 0.5). Cheap actions: m = 30%; neutral actions: m = 50%; advantageous actions: m = 70%.',
'thresholds': OrderedDict([('ind', (Decimal('1.4179255399329134'), Decimal('0'))), ('pref', (Decimal('4.78'), Decimal('0'))), ('veto', (Decimal('42.99100927584742'), Decimal('0')))]),
}),
('c3', {
'preferenceDirection': 'min',
'scaleType': 'cardinal',
'objective': 'C',
'shortName': 'c3',
'name': 'random cardinal cost criterion',
'scale': (0.0, 100.0),
'weight': Decimal('2'),
'randomMode': ['triangular', 50.0, 0.5],
'comment': 'Evaluation generator: triangular law with variable mode (m) and probability repartition (p = 0.5). Cheap actions: m = 30%; neutral actions: m = 50%; advantageous actions: m = 70%.',
'thresholds': OrderedDict([('ind', (Decimal('5.198193773475817'), Decimal('0'))), ('pref', (Decimal('8.65'), Decimal('0'))), ('veto', (Decimal('69.59017840021572'), Decimal('0')))]),
}),
('b2', {
'preferenceDirection': 'max',
'scaleType': 'cardinal',
'objective': 'B',
'shortName': 'b2',
'name': 'random cardinal benefit criterion',
'scale': (0.0, 100.0),
'weight': Decimal('3'),
'randomMode': ['triangular', 50.0, 0.5],
'comment': 'Evaluation generator: triangular law with variable mode (m) and probability repartition (p = 0.5). Cheap actions: m = 30%; neutral actions: m = 50%; advantageous actions: m = 70%.',
'thresholds': OrderedDict([('ind', (Decimal('5.383579161312723'), Decimal('0'))), ('pref', (Decimal('10.1'), Decimal('0'))), ('veto', (Decimal('58.12993634167577'), Decimal('0')))]),
}),
])
NA = Decimal('-999')
evaluation = {
'c1': {
'a1':Decimal("-28.65"),
'a2':Decimal("-15.47"),
'a3':Decimal("-81.69"),
'a4':Decimal("-77.23"),
'a5':Decimal("-57.33"),
'a6':Decimal("-39.33"),
'a7':Decimal("-79.57"),
},
'b1': {
'a1':Decimal("2.00"),
'a2':Decimal("3.00"),
'a3':Decimal("3.00"),
'a4':Decimal("2.00"),
'a5':Decimal("7.00"),
'a6':Decimal("9.00"),
'a7':Decimal("5.00"),
},
'c2': {
'a1':Decimal("-79.26"),
'a2':Decimal("-52.85"),
'a3':Decimal("-77.77"),
'a4':Decimal("-57.77"),
'a5':Decimal("-39.65"),
'a6':Decimal("-58.08"),
'a7':Decimal("-34.87"),
},
'c3': {
'a1':Decimal("-3.19"),
'a2':Decimal("-44.47"),
'a3':Decimal("-66.35"),
'a4':Decimal("-34.80"),
'a5':Decimal("-43.45"),
'a6':Decimal("-71.82"),
'a7':Decimal("-87.54"),
},
'b2': {
'a1':Decimal("20.66"),
'a2':Decimal("47.34"),
'a3':Decimal("57.44"),
'a4':Decimal("69.06"),
'a5':Decimal("35.23"),
'a6':Decimal("52.77"),
'a7':Decimal("92.47"),
},
}
